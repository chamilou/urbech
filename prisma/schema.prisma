// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  refreshToken String?
  role     Role    @default(USER)
  createdAt DateTime @default(now())
  orders   Order[]
  @@map("users")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  price       Float
  description String?
  pricePerUnit Float?
  articleNumber String? //internal SKU
  isTopProduct Boolean @default(false)
  isNewProduct Boolean @default(true)
  categoryId  String?  // Foreign key for category
  category    Category? @relation(fields: [categoryId], references: [id])
  createdAt   DateTime @default(now())
  orderItems  OrderItem[]
  @@map("products")
}

model Category {
  id        String     @id @default(uuid())
  name      String     @unique
  parentId  String?    // Optional, used for subcategories
  parent    Category?  @relation("CategoryParent", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryParent")
  products  Product[]  // A category can have many products
  createdAt DateTime   @default(now())

  @@map("categories")
}
model Order {
  id        String      @id @default(uuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  address   String
  total     Float
  items     OrderItem[] // relation to OrderItem
  createdAt DateTime    @default(now())

  @@map("orders")
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Float

  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@map("order_items")
}


enum Role {
  USER
  ADMIN
}

